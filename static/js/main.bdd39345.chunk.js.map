{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","f","btnList","map","name","onClick","Statistics","good","neutral","bad","total","feedbackPercentage","isNaN","Math","round","Notification","msg","App","state","countFeedbacks","e","currentTarget","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0RAgBeA,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,M,gBCgBQC,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIC,UAAWC,IAAEC,QAAjB,SACGJ,EAAQK,KAAI,SAAAC,GAAI,OACf,6BACE,wBAAQA,KAAMA,EAAMC,QAASN,EAA7B,SACGK,KAFIA,SCkBAE,EArBI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,mBAA7B,OACf,qCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,mDAEGE,MAAMD,GAAsB,EAAIE,KAAKC,MAAMH,GAF9C,WCDOI,EANM,SAAAC,GAAG,OAAI,6BAAKA,EAAIA,OC0DtBC,G,kNAnDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,eAAiB,SAAAC,GACf,IAAMhB,EAAOgB,EAAEC,cAAcjB,KAC7B,EAAKkB,UAAS,SAAAC,GAAS,sBACpBnB,EAAOmB,EAAUnB,GAAQ,O,EAI9BoB,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBX,KADiB,EACXC,QADW,EACFC,K,EAGzBgB,gCAAkC,WAEhC,OADiB,EAAKP,MAAdX,KACO,EAAKiB,qBAAwB,K,4CAG9C,WAAU,IAAD,EACwBE,KAAKR,MAA5BX,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS,CAAC,OAAO,UAAU,OAC3BC,gBAAiB2B,KAAKP,mBAG1B,cAAC,EAAD,CAASxB,MAAM,aAAf,SACG+B,KAAKF,qBAAuB,EAC3B,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKF,qBACZb,mBAAoBe,KAAKD,oCAG3B,cAAC,EAAD,CAAcT,IAAI,kC,GA5CZW,cCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,oC","file":"static/js/main.bdd39345.chunk.js","sourcesContent":["// import s from \"./Section.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport f from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <ul className={f.btnList}>\r\n    {options.map(name => (\r\n      <li key={name}>\r\n        <button name={name} onClick={onLeaveFeedback}>\r\n          {name}\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.string\r\n  ).isRequired,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n// import s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({good, neutral, bad, total, feedbackPercentage}) => (\r\n    <>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {total}</p>\r\n        <p>\r\n      Positive feedback:\r\n          {isNaN(feedbackPercentage) ? 0 : Math.round(feedbackPercentage)}%\r\n        </p>\r\n</>\r\n)\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  feedbackPercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = msg => <h2>{msg.msg}</h2>;\r\n\r\nNotification.propTypes = {\r\n  msg: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from './components/Notification/Notification';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countFeedbacks = e => {\n    const name = e.currentTarget.name\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return (good / this.countTotalFeedback()) * 100\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave Feedback\">\n          <FeedbackOptions\n            options={['good','neutral','bad']}\n            onLeaveFeedback={this.countFeedbacks}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              feedbackPercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification msg=\"No Feedbacks - Sorry\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnList\":\"FeedbackOptions_btnList__1ytya\"};"],"sourceRoot":""}